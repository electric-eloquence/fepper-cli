#!/bin/bash

# Recurse up the directory tree to find the parent directory of a given file.
function findup () {
  test / == "$PWD" && return || test -e "$1" && echo -n "$PWD" && return || cd .. && findup "$1"
}

# First, try to find the parent directory of fepper.command.
fepper_dir=`findup fepper.command`

# If fepper.command not found, try to find tasker.js.
if [ "$fepper_dir" == "" ]; then
  fepper_dir=`findup tasker.js`
fi

# If fepper_dir still not found, exit.
if [ "$fepper_dir" == "" ]; then
  exit 1
fi

# Read some confs from conf.yml.
# Set default values.
app_dir="."
conf_file=""
kill_zombies=""

# Set conf_file location.
if [ ! -f ${fepper_dir}/tasker.js ]; then
  conf_file="${fepper_dir}/conf.yml"

  # Back up IFS
  IFS_DEFAULT=$IFS
  IFS=":"
  while read -r key value
  do
    # Trim whitespace from keys.
    key="${key#"${key%%[![:space:]]*}"}"
    key="${key%"${key##*[![:space:]]}"}"

    # Trim trailing inline comments from values.
    value="${value%%#*}"
    # Trim whitespace from values.
    value="${value#"${value%%[![:space:]]*}"}"
    value="${value%"${value##*[![:space:]]}"}"

    if [ "$key" == "app_dir" ]; then
      app_dir=$value
    elif [ "$key" == "kill_zombies" ]; then
      kill_zombies=$value
    fi
  done < $conf_file

  # Revert IFS
  IFS=$IFS_DEFAULT
fi

# Only kill zombies on default task.
if [ "$1" == "" ] || [ "$1" == "default" ]; then
  if [ "$kill_zombies" == "true" ]; then
    if pgrep -x gulp > /dev/null; then
      echo Killing lingering gulp process...
      killall gulp
    fi
    if pgrep -x node > /dev/null; then
      echo Killing lingering node process...
      killall node
    fi
  fi
fi

s="[[:space:]]"
args=""
for i in "$@"; do
  if [ "$i" == "-v" ]; then
    # Run version task if "$1" == "-v"
    args="$args version"
  elif [[ $i =~ $s ]]; then
    # Wrap arguments containing spaces in double-quotes.
    args="$args \"$i\""
  else
    args="$args $i"
  fi
done

# Run index.js with arguments.
cd $fepper_dir
node ${fepper_dir}/${app_dir}/index.js $args
